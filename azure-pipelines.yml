# https://docs.microsoft.com/azure/devops/pipelines/languages/python
pool:
  vmImage: 'ubuntu-18.04'

trigger:
  batch: true
  branches:
    include:
      - master

variables:
  pythonVersion: '3.6'
  architecture: 'x64'

jobs:
  - job: Build
    steps:
    - template: .azure-templates/steps-requirements.yml
      parameters:
        pythonVersion: ${{ variables.pythonVersion }}
        architecture: ${{ variables.architecture }}

    - script: sudo apt-get update
      displayName: 'Update System Packages'

    - script: sudo apt-get install -y texlive-latex-recommended texlive-fonts-recommended texlive-latex-extra latexmk texlive-lang-greek texlive-luatex texlive-xetex texlive-fonts-extra dvipng librsvg2-bin
      displayName: 'Install LateX'

    - script: make html
      displayName: 'Compile HTML'

    - task: ArchiveFiles@2
      displayName: 'Archive HTML'
      # Try to archive even if the build step failed
      condition: in(variables['Agent.JobStatus'], 'Succeeded', 'SucceededWithIssues', 'Failed')
      inputs:
        rootFolderOrFile: build/html/
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/docs-html.zip'
        replaceExistingArchive: true

    - task: PublishBuildArtifacts@1
      displayName: 'Publish HTML'
      # Try to publish even if the build step failed
      condition: in(variables['Agent.JobStatus'], 'Succeeded', 'SucceededWithIssues', 'Failed')
      inputs:
        artifactName: 'docs-html'
        PathToPublish: '$(Build.ArtifactStagingDirectory)/docs-html.zip'

    - script: make latexpdf
      displayName: 'Compile PDF'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish PDF'
      inputs:
        artifactName: 'docs-pdf'
        PathToPublish: 'build/latex/firstroboticscompetition.pdf'

  - job: LintCheck
    steps:
    - template: .azure-templates/steps-requirements.yml
      parameters:
        pythonVersion: ${{ variables.pythonVersion }}
        architecture: ${{ variables.architecture }}

    - script: make lint
      displayName: 'Lint Check'

  - job: LinkCheck
    steps:
    - template: .azure-templates/steps-requirements.yml
      parameters:
        pythonVersion: ${{ variables.pythonVersion }}
        architecture: ${{ variables.architecture }}

    - script: sudo apt-get update
      displayName: 'Update System Packages'

    - script: sudo apt-get install -y librsvg2-bin
      displayName: 'Install SVG requirements'

    - script: make linkcheck
      displayName: 'Link Check'

  - job: ImageSizeCheck
    steps:
      - task: UsePythonVersion@0
        displayName: 'Select Python Version'
        inputs:
          versionSpec: '${{ variables.pythonVersion }}'
          architecture: '${{ variables.pythonVersion }}'

      - script: make sizecheck
        displayName: 'Check Image Sizes'

  - job: Translations
    steps:
    - template: .azure-templates/steps-requirements.yml
      parameters:
        pythonVersion: ${{ variables.pythonVersion }}
        architecture: ${{ variables.architecture }}

    - script: sudo apt-get update
      displayName: 'Update System Packages'

    - script: sudo apt-get install -y librsvg2-bin
      displayName: 'Install SVG requirements'
      
    - script: make translate
      displayName: 'Build POT Files & Update Configuration File'

    - script: |
        # Ensure configuration did not change
        git --no-pager diff --ignore-space-at-eol --exit-code HEAD
      displayName: 'Check for configuration changes'

    - ${{ if startsWith(variables['build.sourceBranch'], 'refs/heads/master') }}:
      - script: tx push --source --no-interactive
        displayName: Push Translations
        env:
          TX_TOKEN: $(TX_TOKEN)
