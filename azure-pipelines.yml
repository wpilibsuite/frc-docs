# https://docs.microsoft.com/azure/devops/pipelines/languages/python
pool:
  vmImage: 'ubuntu-16.04'

trigger:
  batch: true
  branches:
    include:
      - master

jobs:
  - job: Build
    steps:
    - task: UsePythonVersion@0
      displayName: 'Select Python Version 3.6'
      inputs:
        versionSpec: '3.6'
        architecture: 'x64'

    - script: python -m pip install --upgrade pip setuptools wheel
      displayName: 'Install and Upgrade Pip'

    - script: pip install -r source/requirements.txt
      displayName: 'Install Python Requirements'

    - script: sudo apt-get update
      displayName: 'Update System Packages'

    - script: sudo apt-get install -y texlive-latex-recommended texlive-fonts-recommended texlive-latex-extra latexmk texlive-lang-greek texlive-luatex texlive-xetex texlive-fonts-extra dvipng
      displayName: 'Install LateX'

    - script: sudo apt-get install -qy --force-yes graphviz
      displayName: 'Install GraphViz'

    - script: make html
      displayName: 'Compile HTML'

    - task: ArchiveFiles@2
      displayName: 'Archive HTML'
      # Try to archive even if the build step failed
      condition: in(variables['Agent.JobStatus'], 'Succeeded', 'SucceededWithIssues', 'Failed')
      inputs:
        rootFolderOrFile: build/html/
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/docs-html.zip'
        replaceExistingArchive: true

    - task: PublishBuildArtifacts@1
      displayName: 'Publish HTML'
      # Try to publish even if the build step failed
      condition: in(variables['Agent.JobStatus'], 'Succeeded', 'SucceededWithIssues', 'Failed')
      inputs:
        artifactName: 'docs-html'
        PathToPublish: '$(Build.ArtifactStagingDirectory)/docs-html.zip'

    - script: make latexpdf
      displayName: 'Compile PDF'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish PDF'
      inputs:
        artifactName: 'docs-pdf'
        PathToPublish: 'build/latex/firstroboticscompetition.pdf'

  - job: LintCheck
    steps:
    - task: UsePythonVersion@0
      displayName: 'Select Python Version 3.6'
      inputs:
        versionSpec: '3.6'
        architecture: 'x64'

    - script: python -m pip install --upgrade pip setuptools wheel
      displayName: 'Install and Upgrade Pip'

    - script: pip install -r source/requirements.txt
      displayName: 'Install Python Requirements'

    - script: make lint
      displayName: 'Lint Check'

  - job: LinkCheck
    steps:
    - task: UsePythonVersion@0
      displayName: 'Select Python Version 3.6'
      inputs:
        versionSpec: '3.6'
        architecture: 'x64'

    - script: python -m pip install --upgrade pip setuptools wheel
      displayName: 'Install and Upgrade Pip'

    - script: pip install -r source/requirements.txt
      displayName: 'Install Python Requirements'

    - script: make linkcheck
      displayName: 'Link Check'
